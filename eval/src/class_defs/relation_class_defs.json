{
    "Relation": "class Relation:\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tself.head_entity = head_entity\n\t\tself.tail_entity = tail_entity",
    "AgentArtifact": "class AgentArtifact(Relation):\n\tdef __init__(self, head_entity: Human | GeographicalSocialPolitical | Organization, tail_entity: Vehicle | Weapon | Facility | Organization | GeographicalSocialPolitical):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "GeneralAffiliation": "class GeneralAffiliation(Relation):\n\tdef __init__(self, head_entity: Organization | Human | Facility | GeographicalSocialPolitical, tail_entity: GeographicalSocialPolitical | Human | SpatialEntity | Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "OrganizationAffiliation": "class OrganizationAffiliation(Relation):\n\tdef __init__(self, head_entity: Human | GeographicalSocialPolitical | Organization, tail_entity: GeographicalSocialPolitical | Organization | Human | Facility):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "PartWhole": "class PartWhole(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "PersonalSocial": "class PersonalSocial(Relation):\n\tdef __init__(self, head_entity: Human, tail_entity: Human | Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Physical": "class Physical(Relation):\n\tdef __init__(self, head_entity: Human | GeographicalSocialPolitical | Facility | SpatialEntity | Organization, tail_entity: GeographicalSocialPolitical | Facility | SpatialEntity | Organization | Vehicle):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "AdverseEffect": "class AdverseEffect(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "PlaceOfBirth": "class PlaceOfBirth(Location):\n\tdef __init__(self, head_entity: SpatialEntity | Human | Organization, tail_entity: SpatialEntity | Organization | Human):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "AcademicDegree": "class AcademicDegree(Relation):\n\tdef __init__(self, head_entity: Human, tail_entity: AcademicDegreeEntity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "PlaceOfDeath": "class PlaceOfDeath(Location):\n\tdef __init__(self, head_entity: Human | Organization | SpatialEntity, tail_entity: SpatialEntity | Organization | Human):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "EducationInstitution": "class EducationInstitution(Relation):\n\tdef __init__(self, head_entity: Human, tail_entity: EducationalInstitution):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Residence": "class Residence(Location):\n\tdef __init__(self, head_entity: Human | Organization | SpatialEntity, tail_entity: SpatialEntity | Organization | Human):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "HeadquartersLocation": "class HeadquartersLocation(SignificantPlace):\n\tdef __init__(self, head_entity: Organization, tail_entity: SpatialEntity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "WorkFor": "class WorkFor(Relation):\n\tdef __init__(self, head_entity: Organization, tail_entity: Human | Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Kill": "class Kill(Relation):\n\tdef __init__(self, head_entity: Human, tail_entity: Human):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "LocatedIn": "class LocatedIn(Location):\n\tdef __init__(self, head_entity: SpatialEntity, tail_entity: SpatialEntity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "AdministrativeDivisionOfCountry": "class AdministrativeDivisionOfCountry(Relation):\n\tdef __init__(self, head_entity: SpatialEntity | Organization | Human, tail_entity: SpatialEntity | Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "CountryOfAdministrativeDivisions": "class CountryOfAdministrativeDivisions(Relation):\n\tdef __init__(self, head_entity: SpatialEntity | Organization, tail_entity: SpatialEntity | Organization | Human):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "NeighborhoodOf": "class NeighborhoodOf(Relation):\n\tdef __init__(self, head_entity: SpatialEntity | Human | Organization, tail_entity: SpatialEntity | Human | Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "FoundedBy": "class FoundedBy(Creator):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Child": "class Child(Relative):\n\tdef __init__(self, head_entity: Human | Organization, tail_entity: Human | SpatialEntity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "CountryOfCitizenship": "class CountryOfCitizenship(Country):\n\tdef __init__(self, head_entity: Human | SpatialEntity | Organization, tail_entity: SpatialEntity | Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Capital": "class Capital(Relation):\n\tdef __init__(self, head_entity: SpatialEntity | Human | Organization, tail_entity: SpatialEntity | Human | Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Manufacturer": "class Manufacturer(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "MemberCollection": "class MemberCollection(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "MessageTopic": "class MessageTopic(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "HasEffect": "class HasEffect(FollowedBy):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "InstrumentAgency": "class InstrumentAgency(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Container": "class Container(Location):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "CompanyAdvisors": "class CompanyAdvisors(Relation):\n\tdef __init__(self, head_entity: Organization, tail_entity: Human):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "CompanyFoundedPlace": "class CompanyFoundedPlace(Relation):\n\tdef __init__(self, head_entity: Organization | Human | SpatialEntity, tail_entity: SpatialEntity | Organization | Human):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Industry": "class Industry(PartOf):\n\tdef __init__(self, head_entity: Organization, tail_entity: Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "CompanyMajorShareholders": "class CompanyMajorShareholders(Relation):\n\tdef __init__(self, head_entity: Organization | SpatialEntity, tail_entity: Human | SpatialEntity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "CompanyShareholderAmongMajorShareholders": "class CompanyShareholderAmongMajorShareholders(Relation):\n\tdef __init__(self, head_entity: Human | SpatialEntity, tail_entity: Organization | SpatialEntity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "EthnicGroup": "class EthnicGroup(Relation):\n\tdef __init__(self, head_entity: Human, tail_entity: SpatialEntity | Human | Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "EthnicityOfPeople": "class EthnicityOfPeople(Relation):\n\tdef __init__(self, head_entity: SpatialEntity | Human | Organization, tail_entity: Human):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "GeographicDistribution": "class GeographicDistribution(Relation):\n\tdef __init__(self, head_entity: SpatialEntity, tail_entity: SpatialEntity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Occupation": "class Occupation(Relation):\n\tdef __init__(self, head_entity: Human, tail_entity: Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "ReligionOrWorldview": "class ReligionOrWorldview(Relation):\n\tdef __init__(self, head_entity: Human | Organization, tail_entity: Organization | Human | SpatialEntity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "SportsTeamLocationOfTeams": "class SportsTeamLocationOfTeams(Relation):\n\tdef __init__(self, head_entity: SpatialEntity | Organization, tail_entity: Organization | SpatialEntity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "SportsTeamOfLocation": "class SportsTeamOfLocation(Relation):\n\tdef __init__(self, head_entity: Organization | SpatialEntity, tail_entity: SpatialEntity | Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Conjunction": "class Conjunction(Relation):\n\tdef __init__(self, head_entity: Generic | OtherScientificTerm | Method | Metric | Task | Material, tail_entity: Generic | Method | Metric | OtherScientificTerm | Material | Task):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "EvaluateFor": "class EvaluateFor(Relation):\n\tdef __init__(self, head_entity: Generic | OtherScientificTerm | Method | Metric | Task | Material, tail_entity: Generic | Method | Metric | OtherScientificTerm | Material | Task):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "HasCharacteristic": "class HasCharacteristic(Relation):\n\tdef __init__(self, head_entity: Generic | OtherScientificTerm | Method | Metric | Task | Material, tail_entity: Generic | Method | Metric | OtherScientificTerm | Material | Task):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "HasUse": "class HasUse(Relation):\n\tdef __init__(self, head_entity: Generic | OtherScientificTerm | Method | Metric | Task | Material, tail_entity: Generic | Method | Metric | OtherScientificTerm | Material | Task):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Hyperonym": "class Hyperonym(Relation):\n\tdef __init__(self, head_entity: Generic | OtherScientificTerm | Method | Metric | Task | Material, tail_entity: Generic | Method | Metric | OtherScientificTerm | Material | Task):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "PartOf": "class PartOf(PartiallyCoincidentWith):\n\tdef __init__(self, head_entity: Generic | OtherScientificTerm | Method | Metric | Task | Material, tail_entity: Generic | Method | Metric | OtherScientificTerm | Material | Task):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "RelativeTo": "class RelativeTo(Relation):\n\tdef __init__(self, head_entity: Generic | OtherScientificTerm | Method | Metric | Task | Material, tail_entity: Generic | Method | Metric | OtherScientificTerm | Material | Task):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "AlternateName": "class AlternateName(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "CityOfHeadquarters": "class CityOfHeadquarters(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Founded": "class Founded(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "CountryOfBirth": "class CountryOfBirth(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "CountriesOfResidence": "class CountriesOfResidence(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "MemberOf": "class MemberOf(PartOf):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Origin": "class Origin(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "StateOrProvinceOfHeadquarters": "class StateOrProvinceOfHeadquarters(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "HasSubsidiary": "class HasSubsidiary(HasParts):\n\tdef __init__(self, head_entity: Human | Organization, tail_entity: Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "TitleOfPerson": "class TitleOfPerson(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "CountryOfHeadquarters": "class CountryOfHeadquarters(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "StateOrProvincesOfResidence": "class StateOrProvincesOfResidence(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "CitiesOfResidence": "class CitiesOfResidence(Relation):\n\tdef __init__(self, head_entity: Organization, tail_entity: Organization):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "TopMembersEmployees": "class TopMembersEmployees(Relation):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)",
    "Spouse": "class Spouse(Relative):\n\tdef __init__(self, head_entity: Entity, tail_entity: Entity):\n\t\tsuper().__init__(head_entity=head_entity, tail_entity=tail_entity)"
}