{
    "Entity": "class Entity:\n\tdef __init__(self, name: str):\n\t\tself.name = name",
    "Dna": "class Dna(ChemicalCompound):\n\tpass",
    "Rna": "class Rna(ChemicalCompound):\n\tpass",
    "CellLine": "class CellLine(Taxon):\n\tpass",
    "CellType": "class CellType(AnatomicalStructureType):\n\tpass",
    "Protein": "class Protein(ChemicalCompound):\n\tpass",
    "Facility": "class Facility(Work):\n\tpass",
    "GeographicalSocialPolitical": "class GeographicalSocialPolitical(Entity):\n\tpass",
    "Human": "class Human(Person):\n\tpass",
    "Organization": "class Organization(GroupOfHumans):\n\tpass",
    "SpatialEntity": "class SpatialEntity(Entity):\n\tpass",
    "Vehicle": "class Vehicle(Machine):\n\tpass",
    "Weapon": "class Weapon(MilitaryEquipment):\n\tpass",
    "Disease": "class Disease(BiologicalProcess):\n\tpass",
    "Corporation": "class Corporation(Company):\n\tpass",
    "CreativeWork": "class CreativeWork(Work):\n\tpass",
    "Event": "class Event(Occurrence):\n\tpass",
    "GroupOfHumans": "class GroupOfHumans(GroupOfLivingThings):\n\tpass",
    "Product": "class Product(ArtificialEntity):\n\tpass",
    "Amenity": "class Amenity(Service):\n\tpass",
    "Cuisine": "class Cuisine(Culture):\n\tpass",
    "Dish": "class Dish(Product):\n\tpass",
    "Name": "class Name(Identifier):\n\tpass",
    "OpeningHours": "class OpeningHours(TimeInterval):\n\tpass",
    "Price": "class Price(Measure):\n\tpass",
    "UserRating": "class UserRating(Evaluation):\n\tpass",
    "CalendarDate": "class CalendarDate(Day):\n\tpass",
    "CardinalNumber": "class CardinalNumber(OrdinalNumber):\n\tpass",
    "Language": "class Language(Languoid):\n\tpass",
    "Law": "class Law(Rule):\n\tpass",
    "Money": "class Money(LegalTender):\n\tpass",
    "NationalReligiousPolitical": "class NationalReligiousPolitical(Entity):\n\tpass",
    "OrdinalNumber": "class OrdinalNumber(Property):\n\tpass",
    "Percent": "class Percent(Ratio):\n\tpass",
    "Quantity": "class Quantity(Property):\n\tpass",
    "Time": "class Time(Set):\n\tpass",
    "WorkOfArt": "class WorkOfArt(CreativeWork):\n\tpass",
    "BusModel": "class BusModel(AutomobileModel):\n\tpass",
    "CarBrand": "class CarBrand(Brand):\n\tpass",
    "Color": "class Color(Quality):\n\tpass",
    "Coupe": "class Coupe(MotorCar):\n\tpass",
    "Hatchback": "class Hatchback(MotorCar):\n\tpass",
    "Minivan": "class Minivan(MotorCar):\n\tpass",
    "Motorcycle": "class Motorcycle(MotorVehicle):\n\tpass",
    "OrientationOfVehicle": "class OrientationOfVehicle(Entity):\n\tpass",
    "PositionOfVehicle": "class PositionOfVehicle(Entity):\n\tpass",
    "Roadster": "class Roadster(MotorCar):\n\tpass",
    "Sedan": "class Sedan(MotorCar):\n\tpass",
    "SportUtilityVehicle": "class SportUtilityVehicle(MotorCar):\n\tpass",
    "SportsCar": "class SportsCar(MotorCar):\n\tpass",
    "StationWagon": "class StationWagon(MotorCar):\n\tpass",
    "Truck": "class Truck(CommercialVehicle):\n\tpass",
    "Van": "class Van(MotorVehicle):\n\tpass",
    "VehicleFamily": "class VehicleFamily(Metaclass):\n\tpass",
    "VehicleModel": "class VehicleModel(ProductModel):\n\tpass",
    "VehicleRange": "class VehicleRange(Entity):\n\tpass",
    "VehicleVelocity": "class VehicleVelocity(Entity):\n\tpass",
    "VintageCar": "class VintageCar(MotorCar):\n\tpass",
    "Group": "class Group(GeologicalStructure):\n\tpass",
    "Animal": "class Animal(AnatomicalEntity):\n\tpass",
    "AstronomicalObject": "class AstronomicalObject(PhysicalObject):\n\tpass",
    "Biology": "class Biology(NaturalScience):\n\tpass",
    "Food": "class Food(PhysicalObject):\n\tpass",
    "GeographicalPhenomenon": "class GeographicalPhenomenon(Entity):\n\tpass",
    "Media": "class Media(Means):\n\tpass",
    "MythicalCharacter": "class MythicalCharacter(MythicalEntity):\n\tpass",
    "Plant": "class Plant(AnatomicalEntity):\n\tpass",
    "Tool": "class Tool(Equipment):\n\tpass",
    "District": "class District(AdministrativeTerritorialEntity):\n\tpass",
    "GeographicLocation": "class GeographicLocation(Entity):\n\tpass",
    "River": "class River(Stream):\n\tpass",
    "Road": "class Road(Thoroughfare):\n\tpass",
    "Anatomy": "class Anatomy(Medicine):\n\tpass",
    "TypeOfChemicalClass": "class TypeOfChemicalClass(Class):\n\tpass",
    "Gene": "class Gene(Part):\n\tpass",
    "Application": "class Application(Activity):\n\tpass",
    "Biomedicine": "class Biomedicine(Medicine):\n\tpass",
    "EnablingTechnology": "class EnablingTechnology(Technology):\n\tpass",
    "EngineeringFeature": "class EngineeringFeature(Entity):\n\tpass",
    "LabTechnique": "class LabTechnique(ScientificTechnique):\n\tpass",
    "MachanicalProperty": "class MachanicalProperty(Entity):\n\tpass",
    "Machine": "class Machine(Appliance):\n\tpass",
    "ManufacturingProcess": "class ManufacturingProcess(Entity):\n\tpass",
    "ManufacturingStandard": "class ManufacturingStandard(Entity):\n\tpass",
    "Material": "class Material(Product):\n\tpass",
    "Principle": "class Principle(Rule):\n\tpass",
    "ProcessParameter": "class ProcessParameter(Entity):\n\tpass",
    "Actor": "class Actor(LegalPerson):\n\tpass",
    "AverageRatings": "class AverageRatings(Entity):\n\tpass",
    "Character": "class Character(FictionalCharacter):\n\tpass",
    "Director": "class Director(Manager):\n\tpass",
    "FilmTrailer": "class FilmTrailer(CulturalHeritage):\n\tpass",
    "Genre": "class Genre(Class):\n\tpass",
    "Plot": "class Plot(LiteraryWork):\n\tpass",
    "Review": "class Review(IntellectualWork):\n\tpass",
    "Song": "class Song(Poetry):\n\tpass",
    "Year": "class Year(TimeInterval):\n\tpass",
    "Disability": "class Disability(Property):\n\tpass"
}